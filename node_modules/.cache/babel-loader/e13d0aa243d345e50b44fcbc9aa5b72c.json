{"remainingRequest":"/home/pavel/git/Weather-widget/node_modules/babel-loader/lib/index.js!/home/pavel/git/Weather-widget/node_modules/eslint-loader/index.js??ref--13-0!/home/pavel/git/Weather-widget/src/App/index.js?vue&type=script&lang=js&","dependencies":[{"path":"/home/pavel/git/Weather-widget/src/App/index.js","mtime":1572940535351},{"path":"/home/pavel/git/Weather-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pavel/git/Weather-widget/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pavel/git/Weather-widget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/pavel/git/Weather-widget/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Info from \"../components/Info/temp.vue\";\nimport Form from \"../components/Form/temp.vue\";\nimport Weather from \"../components/Weather/temp.vue\";\nexport default {\n  name: 'app',\n  components: {\n    Info: Info,\n    Form: Form,\n    Weather: Weather\n  },\n  data: function data() {\n    return {\n      obj: {\n        temp: 0,\n        pressure: '0:00:00',\n        sunset: 0,\n        active: false\n      },\n      key: '23fbf964c1eb2fa295dd50b21b675122',\n      city: ''\n    };\n  },\n  methods: {\n    gettingWeather: function () {\n      var _gettingWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var link, data, synSunset, date, hours, minutes, seconds, sunset;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!this.city) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.next = 4;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.city, \"&appid=\").concat(this.key, \"&units=metric\"));\n\n              case 4:\n                link = _context.sent;\n                _context.next = 7;\n                return link.json();\n\n              case 7:\n                data = _context.sent;\n                synSunset = data.sys.sunset;\n                date = new Date(synSunset * 1000);\n                hours = date.getHours();\n                if (hours < 10) hours = '0' + hours;\n                minutes = date.getMinutes();\n                if (minutes < 10) minutes = '0' + minutes;\n                seconds = date.getSeconds();\n                if (seconds < 10) seconds = '0' + seconds;\n                sunset = \"\".concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n                this.obj.temp = data.main.temp;\n                this.obj.data = data.name;\n                this.obj.pressure = Math.round(data.main.pressure * 0.75006375541921);\n                this.obj.sunset = sunset;\n                this.obj.active = true;\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function gettingWeather(_x) {\n        return _gettingWeather.apply(this, arguments);\n      }\n\n      return gettingWeather;\n    }(),\n    inputChange: function inputChange(e) {\n      this.city = e.target.value;\n    },\n    remove: function remove() {\n      this.city = '';\n      this.obj.temp = 0;\n      this.obj.pressure = 0;\n      this.obj.sunset = '0:00:00';\n      this.obj.active = false;\n    }\n  }\n};",{"version":3,"sources":["/home/pavel/git/Weather-widget/src/App/index.js"],"names":["Info","Form","Weather","name","components","data","obj","temp","pressure","sunset","active","key","city","methods","gettingWeather","e","preventDefault","fetch","link","json","synSunset","sys","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","main","Math","round","inputChange","target","value","remove"],"mappings":";;;AAAA,OAAOA,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,UAAU,EAAE;AACVJ,IAAAA,IAAI,EAAJA,IADU;AAEVC,IAAAA,IAAI,EAAJA,IAFU;AAGVC,IAAAA,OAAO,EAAPA;AAHU,GAFC;AAObG,EAAAA,IAPa,kBAON;AACL,WAAO;AACLC,MAAAA,GAAG,EAAE;AACHC,QAAAA,IAAI,EAAE,CADH;AAEHC,QAAAA,QAAQ,EAAE,SAFP;AAGHC,QAAAA,MAAM,EAAE,CAHL;AAIHC,QAAAA,MAAM,EAAE;AAJL,OADA;AAOLC,MAAAA,GAAG,EAAE,kCAPA;AAQLC,MAAAA,IAAI,EAAE;AARD,KAAP;AAUD,GAlBY;AAmBbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc;AAAA;AAAA;AAAA,8BAAE,iBAAgBC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdA,gBAAAA,CAAC,CAACC,cAAF;;AADc,qBAEV,KAAKJ,IAFK;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIZK,KAAK,6DAAsD,KAAKL,IAA3D,oBAAyE,KAAKD,GAA9E,mBAJO;;AAAA;AAGNO,gBAAAA,IAHM;AAAA;AAAA,uBAKOA,IAAI,CAACC,IAAL,EALP;;AAAA;AAKNd,gBAAAA,IALM;AAONe,gBAAAA,SAPM,GAOMf,IAAI,CAACgB,GAAL,CAASZ,MAPf;AASNa,gBAAAA,IATM,GASC,IAAIC,IAAJ,CAASH,SAAS,GAAG,IAArB,CATD;AAWRI,gBAAAA,KAXQ,GAWAF,IAAI,CAACG,QAAL,EAXA;AAYZ,oBAAID,KAAK,GAAG,EAAZ,EAAgBA,KAAK,GAAG,MAAMA,KAAd;AAEZE,gBAAAA,OAdQ,GAcEJ,IAAI,CAACK,UAAL,EAdF;AAeZ,oBAAID,OAAO,GAAG,EAAd,EAAkBA,OAAO,GAAG,MAAMA,OAAhB;AAEdE,gBAAAA,OAjBQ,GAiBEN,IAAI,CAACO,UAAL,EAjBF;AAkBZ,oBAAID,OAAO,GAAG,EAAd,EAAkBA,OAAO,GAAG,MAAMA,OAAhB;AAEZnB,gBAAAA,MApBM,aAoBMe,KApBN,cAoBeE,OApBf,cAoB0BE,OApB1B;AAsBZ,qBAAKtB,GAAL,CAASC,IAAT,GAAgBF,IAAI,CAACyB,IAAL,CAAUvB,IAA1B;AACA,qBAAKD,GAAL,CAASD,IAAT,GAAgBA,IAAI,CAACF,IAArB;AACA,qBAAKG,GAAL,CAASE,QAAT,GAAoBuB,IAAI,CAACC,KAAL,CAAW3B,IAAI,CAACyB,IAAL,CAAUtB,QAAV,GAAqB,gBAAhC,CAApB;AACA,qBAAKF,GAAL,CAASG,MAAT,GAAkBA,MAAlB;AACA,qBAAKH,GAAL,CAASI,MAAT,GAAkB,IAAlB;;AA1BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADP;AA8BPuB,IAAAA,WAAW,EAAE,qBAAUlB,CAAV,EAAa;AACxB,WAAKH,IAAL,GAAYG,CAAC,CAACmB,MAAF,CAASC,KAArB;AACD,KAhCM;AAiCPC,IAAAA,MAjCO,oBAiCE;AACP,WAAKxB,IAAL,GAAY,EAAZ;AACA,WAAKN,GAAL,CAASC,IAAT,GAAgB,CAAhB;AACA,WAAKD,GAAL,CAASE,QAAT,GAAoB,CAApB;AACA,WAAKF,GAAL,CAASG,MAAT,GAAkB,SAAlB;AACA,WAAKH,GAAL,CAASI,MAAT,GAAkB,KAAlB;AACD;AAvCM;AAnBI,CAAf","sourcesContent":["import Info from '../components/Info/temp.vue';\nimport Form from '../components/Form/temp.vue';\nimport Weather from '../components/Weather/temp.vue';\n\nexport default {\n  name: 'app',\n  components: {\n    Info,\n    Form,\n    Weather\n  },\n  data() {\n    return {\n      obj: {\n        temp: 0,\n        pressure: '0:00:00',\n        sunset: 0,\n        active: false,\n      },\n      key: '23fbf964c1eb2fa295dd50b21b675122',\n      city: '',\n    }\n  },\n  methods: {\n    gettingWeather: async function (e) {\n      e.preventDefault();\n      if (this.city) {\n        const link = await \n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city}&appid=${this.key}&units=metric`);\n        const data = await link.json();\n\n        const synSunset = data.sys.sunset;\n\n        const date = new Date(synSunset * 1000);\n\n        let hours = date.getHours();\n        if (hours < 10) hours = '0' + hours;\n\n        let minutes = date.getMinutes();\n        if (minutes < 10) minutes = '0' + minutes;\n\n        let seconds = date.getSeconds();\n        if (seconds < 10) seconds = '0' + seconds;\n\n        const sunset = `${hours}:${minutes}:${seconds}`;\n\n        this.obj.temp = data.main.temp;\n        this.obj.data = data.name;\n        this.obj.pressure = Math.round(data.main.pressure * 0.75006375541921);\n        this.obj.sunset = sunset;\n        this.obj.active = true;\n      } \n    },\n    inputChange: function (e) {\n      this.city = e.target.value;\n    },\n    remove() {\n      this.city = '';\n      this.obj.temp = 0;\n      this.obj.pressure = 0;\n      this.obj.sunset = '0:00:00';\n      this.obj.active = false;\n    },\n  },\n}"]}]}