{"remainingRequest":"/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/babel-loader/lib/index.js!/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pavel/Documents/Vue/Weather widget/traffic-light/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pavel/Documents/Vue/Weather widget/traffic-light/src/App.vue","mtime":1569596467851},{"path":"/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/pavel/Documents/Vue/Weather widget/traffic-light/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport Info from \"./components/Info.vue\";\nimport Form from \"./components/Form.vue\";\nimport Weather from \"./components/Weather.vue\";\nexport default {\n  name: 'app',\n  components: {\n    Info: Info,\n    Form: Form,\n    Weather: Weather\n  },\n  data: function data() {\n    return {\n      state: {\n        cityName: '',\n        temp: '',\n        city: '',\n        country: '',\n        pressure: '',\n        sunset: '',\n        error: null\n      },\n      key: '23fbf964c1eb2fa295dd50b21b675122',\n      city: ''\n    };\n  },\n  methods: {\n    gettingWeather: function () {\n      var _gettingWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var link, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                this.city = e.target.previousSibling.value;\n                _context.next = 4;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.city, \"&appid=\").concat(this.key, \"&units=metric\"));\n\n              case 4:\n                link = _context.sent;\n                _context.next = 7;\n                return link.json();\n\n              case 7:\n                data = _context.sent;\n                console.log(data);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function gettingWeather(_x) {\n        return _gettingWeather.apply(this, arguments);\n      }\n\n      return gettingWeather;\n    }()\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;AASA,OAAA,IAAA;AACA,OAAA,IAAA;AACA,OAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA,EALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,KAAA,EAAA;AAPA,OADA;AAUA,MAAA,GAAA,EAAA,kCAVA;AAWA,MAAA,IAAA,EAAA;AAXA,KAAA;AAaA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA;AAAA;AAAA;AAAA,8BAAA,iBAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,CAAA,CAAA,cAAA;AACA,qBAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,eAAA,CAAA,KAAA;AAFA;AAAA,uBAIA,KAAA,6DAAA,KAAA,IAAA,oBAAA,KAAA,GAAA,mBAJA;;AAAA;AAGA,gBAAA,IAHA;AAAA;AAAA,uBAKA,IAAA,CAAA,IAAA,EALA;;AAAA;AAKA,gBAAA,IALA;AAMA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"wraper\">\n    <Info />\n    <Form :weatherMethod=\"gettingWeather\" />\n    <Weather />\n  </div>  \n</template>\n\n<script>\nimport Info from './components/Info.vue';\nimport Form from './components/Form.vue';\nimport Weather from './components/Weather.vue';\n\nexport default {\n  name: 'app',\n  components: {\n    Info,\n    Form,\n    Weather\n  },\n  \n  data() {\n    return {\n      state: {\n        cityName: '',\n        temp: '',\n        city: '',\n        country: '',\n        pressure: '',\n        sunset: '',\n        error: null\n      },\n      key: '23fbf964c1eb2fa295dd50b21b675122',\n      city: '',\n    }\n  },\n  methods: {\n    gettingWeather: async function (e) {\n      e.preventDefault();\n      this.city = e.target.previousSibling.value;\n      const link = await \n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city}&appid=${this.key}&units=metric`);\n      const data = await link.json();\n      console.log(data);\n    }\n  },\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src"}]}